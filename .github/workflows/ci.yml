# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      # - run: npm ci
      # - run: npm run build --if-present
      # - run: npm test
      - run: npm install
      - run: npm run build

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{secrets.PORT }} ${{secrets.HOST }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_rsa -p ${{secrets.PORT }} root@${{secrets.HOST }} "echo 'REMOTE IS READY'"

      - name: upload project
        run: |
          echo "Starting copy to remote ..."
          tar -czvf ltms-front.tar.gz *
          scp -P ${{secrets.PORT }} ltms-front.tar.gz root@${{secrets.HOST }}:/data
          ssh -i ~/.ssh/id_rsa -p ${{secrets.PORT }} root@${{secrets.HOST }} "cd /data && rm -rf ltms-front && mkdir ltms-front  && tar -xzf ltms-front.tar.gz -C /data/ltms-front"

      - name: Docker build
        run: |
          ssh -i ~/.ssh/id_rsa -p ${{secrets.PORT }} root@${{secrets.HOST }} "cd /data/ltms-front && docker build -t ltms:latest . ; \
          docker run -p 8000:80 ltms-front"
          

      # # - name: build docker
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USER }}
      #     password: ${{ secrets.DOCKER_PASS }}

    
